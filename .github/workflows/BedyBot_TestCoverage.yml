# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
        
# --------------------------------------
# Debugging
# --------------------------------------
#     - name: Debugging with ssh
#      # You may pin to the exact commit or the version.
#       uses: lhotari/action-upterm@v1
# --------------------------------------

name: BedyBotDB Test Coverage

on:
  pull_request:
    branches:
    - feature/treeRefactor
    
  release:
    types: [created, edited]
    branches:
    - feature/treeRefactor 

  # Manual action
  workflow_dispatch:
  
# ref: feature/treeRefactor
# path: .github/workflows/BedyBot_TestCoverage.yml

env:
     NODE_ENV:  "test"
     DB_NAME:  "bedyapi-dbtest"
     DB_USER:  "root"
     DB_PASSWORD:  ${{ secrets.DB_PASSWD }}
     DB_HOST: localhost
     DB_PORT: 3306

permissions:
   pull-requests: write
   packages: write
    # deployments
    
jobs:
  build:
    runs-on: ubuntu-latest
    environment: BedyBotDB-TestEnv

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      mariadb:
        image: mariadb:latest
        env:
              MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWD }}
              MYSQL_DATABASE: "bedyapi-dbtest"
        ports:
              - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2
    #   with:
    #       ref: ${{ github.event.pull_request.head.sha }}
    #       fetch-depth: 1000
    
    #  - name: Fetch base
    #   run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1000
     
    - name: Start MariaDB
      uses: docker://ghcr.io/marketplace-actions/start-mariadb:latest
      with:
        mysql-root-password: ${{ secrets.DB_PASSWD }}
        mysql-database: "bedyapi-dbtest"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    # - name: Install Typescript
    #   run: npm install typescript@4.8.4 -g
      
    - name: Install dependencies
      run: npm ci

# ---------------------------------------
# On Pull request
# - Add comment test coverage in PR
# ---------------------------------------
    - name: Run Test Coverage
      if: ${{ github.event_name == 'pull_request' }}
      run: npm run test:ts_json_coverage 

    # https://github.com/marketplace/actions/report-nyc-coverage
    - name: Report NYC coverage
      if: ${{ github.event_name == 'pull_request' }}
      uses: sidx1024/report-nyc-coverage-github-action@v1.2.7
      with:
        # Path to coverage file generated by "nyc report".
        coverage_file: "coverageJson/coverage-summary.json"
        comment_template_file: "template/comment-template.md"

# ---------------------------------------
# On Manual deploy
# -Commit coverage result on SSH
# ---------------------------------------
    - name: Run Test Coverage
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: npm run test:ts_html_coverage
      
    - name: Upload coverage artifact
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v3.1.2
      with:
          name: test-coverage-result
          path: "coverageHtml/**"
          retention-days: 1

    - name: Download coverage artifact
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/download-artifact@v2.1.1
      with:
          name: test-coverage-result
          path: BedyBotDB     
      
    - name: Publish on SSH
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.KEY }}
        source: BedyBotDB/*
       # source: "coverage/*.*"
        target: '/home/bedybot-docker/shared/coverage/www/'
        
    - name: Upload coverage reports to Codecov
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: BedyBotDB/*
